<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>damaged_inf->bite</li>
    <li>damaged_inf->chomp</li>
    <li>damaged_inf(p=0.5)->nip</li>
    <li>damaged_past->bit</li>
    <li>damaged_past->chomped</li>
    <li>damaged_past->nipped</li>
    <li>damaged_past->gnawed</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</li>
    <li>destroyed_past->tore off</li>
    <li>destroyed_past->ripped off</li>
    <li>destroyed_past->bit off</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->ripping off</li>
    <li>destroyed_present->biting off</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix->[to] chunks</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] shreds</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</li>
  -->
  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->укусить</li>
    <li>damaged_inf->грызануть</li>
    <li>maneuver_noun_gen->укуса</li>
    <li>maneuver_noun_instr->укусом</li>
    <li>damaged->жуёт</li>
    <li>damaged->рвёт</li>
    <li>damaged->грызёт</li>
    <li>damaged->кусает</li>
    <li>damaged_participle->надкусывая</li>
    <li>damaged_participle->надрывая</li>
    <li>damaged_participle->надгрызая</li>
    <li>damaged_participle->жуя</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->обнажая плоть</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->обнажая внутренние механизмы</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->оставляя страшные разрывы на коже</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->оставляя страшные разрывы на металле</li>
    <li>destroyed->разгрызает</li>
    <li>destroyed->раскусывает</li>
    <li>destroyed->разрывает</li>
    <li>destroyed->разжёвывает</li>
    <li>destroyed_participle->разгрызая</li>
    <li>destroyed_participle->раскусывая</li>
    <li>destroyed_participle->разрывая</li>
    <li>destroyed_participle->разжёвывая</li>
    <li>destroyed_suffix->на клочки</li>
    <li>destroyed_suffix->в кашу</li>
    <li>destroyed_suffix->в фарш</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->на кровавые лоскуты</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->в мясную кашу</li>
  </Maneuver_Bite.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] пытается кинуть [TOOL_label] в глаза [RECIPIENT_definite], но [RECIPIENT_definite] уворачивается.</li>
    <li>r_logentry->[INITIATOR_definite] пытается кинуть [TOOL_label] в глаза [RECIPIENT_definite], но [RECIPIENT_definite] вовремя закрывает лицо.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] бросает [TOOL_label] в глаза [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] пинает [TOOL_label] в глаза [RECIPIENT_definite].</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] пытается кинуть [TOOL_label] в глаза [RECIPIENT_definite], но промахивается.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=2)->poke</li>
    <li>damaged_inf(p=2)->jab</li>
    <li>damaged_inf->prod</li>
    <li>damaged_inf->shove</li>
    <li>damaged_inf->stab</li>
    <li>damaged_past(p=2)->poked</li>
    <li>damaged_past(p=2)->jabbed</li>
    <li>damaged_past->prodded</li>
    <li>damaged_past->shoved</li>
    <li>damaged_past->stabbed</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf->ткнуть</li>
    <li>damaged_inf->нанести тычковый удар</li>
    <li>maneuver_noun_gen->тычка</li>
    <li>maneuver_noun_gen->тычкового удара</li>
    <li>maneuver_noun_instr->ударом</li>
    <li>maneuver_noun_instr->тычковым ударом</li>
    <li>damaged(p=2)->тыкает</li>
    <li>damaged(p=2)->бьёт</li>
    <li>damaged->ушибает</li>
    <li>damaged->давит</li>
    <li>damaged_participle(p=2)->тыкая</li>
    <li>damaged_participle(p=2)->ушибая</li>
    <li>damaged_participle->давя</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->оставляя огромный синяк</li>
    <li>flavortext_consequence(target_part_destroyed_count==1)->деформируя эту часть тела</li>
    <li>flavortext_consequence->сбивая [RECIPIENT_objective] с ног</li>
    <li>flavortext_consequence->отшвыривая [RECIPIENT_objective] в сторону</li>
    <li>destroyed->протыкает</li>
    <li>destroyed->раздавливает</li>
    <li>destroyed->разбивает</li>
    <li>destroyed->отбивает</li>
    <li>destroyed->размозжает</li>
    <li>destroyed_participle->протыкая</li>
    <li>destroyed_participle->раздавливая</li>
    <li>destroyed_participle->разбивая</li>
    <li>destroyed_participle->отбивая</li>
    <li>destroyed_participle->размозжая</li>
    <li>destroyed_suffix->в кашу</li>
    <li>destroyed_suffix->на куски</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->в кровавый фарш</li>
    <li>destroyed_suffix->на клочки</li>
  </Maneuver_Poke.rulePack.rulesStrings>
  
  <!-- EN:
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] fragments</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</li>
  -->
  <Maneuver_Scratch.rulePack.rulesStrings>
    <!-- Includes: Maneuver_Scratch_Damage -->
    <li>woundname_acc->рану</li>
    <li>woundname_acc(p=0.3)->открытую рану</li>
    <li>woundname_gen->раны</li>
    <li>woundname_gen(p=0.3)->открытой раны</li>
    <li>flavortext_consequence->оставляя [woundname_acc]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->обнажая плоть</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->обнажая внутренние механизмы</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->вызывая кровотечение из [woundname_gen]</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->вызывая утечку рабочих жидкостей из [woundname_gen]</li>
    <li>destroyed_suffix->на лоскуты</li>
    <li>destroyed_suffix->в клочья</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->в кровавое месиво</li>
    <li>destroyed_suffix->на куски</li>
  </Maneuver_Scratch.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->scratch</li>
    <li>damaged_inf(deflected!=True)->lacerate</li>
    <li>damaged_inf(deflected!=True)->tear</li>
    <li>damaged_inf->cut</li>
    <li>damaged_past(p=4)->scratched</li>
    <li>damaged_past(deflected!=True)->lacerated</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_past->cut</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->mauled</li>
    <li>destroyed_past->lacerated</li>
    <li>destroyed_past->tore</li>
    <li>destroyed_past->shredded</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  -->
  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->разодрать</li>
    <li>damaged_inf->разорвать</li>
    <li>maneuver_noun_gen->удара</li>
    <li>maneuver_noun_instr->ударом</li>
    <li>damaged(p=4)->ранит</li>
    <li>damaged->вспарывает</li>
    <li>damaged->царапает</li>
    <li>damaged->обдирает</li>
    <li>damaged_participle->раня</li>
    <li>damaged_participle->вспарывая</li>
    <li>damaged_participle->царапая</li>
    <li>damaged_participle->обдирая</li>
    <li>destroyed->растерзывает</li>
    <li>destroyed->раздирает</li>
    <li>destroyed->разрывает</li>
    <li>destroyed_participle->растерзывая</li>
    <li>destroyed_participle->раздирая</li>
    <li>destroyed_participle->разрывая</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->slash</li>
    <li>damaged_inf->cut</li>
    <li>damaged_inf->chop</li>
    <li>damaged_inf->hack</li>
    <li>damaged_inf->slice</li>
    <li>damaged_inf(deflected!=True)->gash</li>
    <li>damaged_past(p=4)->slashed</li>
    <li>damaged_past->cut</li>
    <li>damaged_past->chopped</li>
    <li>damaged_past->hacked</li>
    <li>damaged_past->sliced</li>
    <li>damaged_past(deflected!=True)->gashed</li>
    <li>damaged_present->slashing</li>
    <li>damaged_present->cutting</li>
    <li>damaged_present->slicing</li>
    <li>damaged_present(deflected!=True)->gashing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</li>
    <li>destroyed_past->bisected</li>
    <li>destroyed_past->divided</li>
    <li>destroyed_past->halved</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->split</li>
    <li>destroyed_present->bisecting</li>
    <li>destroyed_present->dividing</li>
    <li>destroyed_present->halving</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->splitting</li>
    <li>destroyed_suffix->into neat pieces</li>
    <li>destroyed_suffix->cleanly</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</li>
  -->
  <Maneuver_Slash.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->нанести рубящий удар</li>
    <li>damaged_inf->порезать</li>
    <li>damaged_inf->рубануть</li>
    <li>damaged_inf->рубануть сплеча</li>
    <li>damaged_inf->резануть</li>
    <li>damaged_inf->ударить сплеча</li>
    <li>maneuver_noun_gen->рубящего удара</li>
    <li>maneuver_noun_gen->удара сплеча</li>
    <li>maneuver_noun_gen(p=0.5)->пореза</li>
    <li>maneuver_noun_instr->рубящим ударом</li>
    <li>maneuver_noun_instr->ударом сплеча</li>
    <li>maneuver_noun_instr(p=0.5)->порезом</li>
    <li>damaged(p=4)->рубит</li>
    <li>damaged->рассекает</li>
    <li>damaged->режет</li>
    <li>damaged_participle->рубя</li>
    <li>damaged_participle->рассекая</li>
    <li>damaged_participle->разрезая</li>
    <li>woundname_gen->раны</li>
    <li>woundname_gen(p=0.3)->открытой раны</li>
    <li>woundname_gen(p=0.3)->страшной раны</li>
    <li>woundname_acc->рану</li>
    <li>woundname_acc(p=0.3)->открытую рану</li>
    <li>woundname_acc(p=0.3)->страшную рану</li>
    <li>flavortext_consequence->оставляя [woundname_acc]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->обнажая плоть</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->обнажая внутренние механизмы</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->вызывая кровотечение из [woundname_gen]</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->вызывая утечку рабочих жидкостей из [woundname_gen]</li>
    <li>destroyed->разрубает</li>
    <li>destroyed->разделяет</li>
    <li>destroyed->рассекает</li>
    <li>destroyed_participle->разрубая</li>
    <li>destroyed_participle->разделяя</li>
    <li>destroyed_participle->рассекая</li>
    <li>destroyed_suffix->на мелкие кусочки</li>
    <li>destroyed_suffix->чисто</li>
    <li>destroyed_suffix->надвое</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->на две равные части</li>
  </Maneuver_Slash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Smash.rulePack.rulesStrings>
    <!-- Includes: Maneuver_Smash_Damage -->
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->оставляя огромный синяк</li>
    <li>flavortext_consequence(target_part_destroyed_count==1)->деформируя эту часть тела</li>
    <li>flavortext_consequence->сбивая [RECIPIENT_objective] с ног</li>
    <li>flavortext_consequence->отшвыривая [RECIPIENT_objective] в сторону</li>
    <li>destroyed_suffix->в лепёшку</li>
    <li>destroyed_suffix->в кашу</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->в фарш</li>
    <li>destroyed_suffix->на куски</li>
  </Maneuver_Smash.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf->hit</li>
    <li>damaged_inf->smash</li>
    <li>damaged_inf->bash</li>
    <li>damaged_inf->slam</li>
    <li>damaged_inf->strike</li>
    <li>damaged_inf->beat</li>
    <li>damaged_past->hit</li>
    <li>damaged_past->smashed</li>
    <li>damaged_past->bashed</li>
    <li>damaged_past->slammed</li>
    <li>damaged_past->struck</li>
    <li>damaged_past->beat</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->breaking</li>
  -->
  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->ударить</li>
    <li>damaged_inf->нанести удар</li>
    <li>damaged_inf->стукнуть</li>
    <li>damaged_inf->заехать</li>
    <li>maneuver_noun_gen->удара</li>
    <li>maneuver_noun_instr->ударом</li>
    <li>damaged->дробит</li>
    <li>damaged(p=4)->бьёт</li>
    <li>damaged->ушибает</li>
    <li>damaged_participle->ушибая</li>
    <li>damaged_participle->дробя</li>
    <li>destroyed->разбивает</li>
    <li>destroyed->раздрабливает</li>
    <li>destroyed->размазывает</li>
    <li>destroyed->отбивает</li>
    <li>destroyed_participle->разбивая</li>
    <li>destroyed_participle->раздрабливая</li>
    <li>destroyed_participle->размазывая</li>
    <li>destroyed_participle->отбивая</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->stab</li>
    <li>damaged_inf->jab</li>
    <li>damaged_inf(deflected!=True)->pierce</li>
    <li>damaged_inf(deflected!=True)->puncture</li>
    <li>damaged_inf(deflected!=True)->skewer</li>
    <li>damaged_past(p=4)->stabbed</li>
    <li>damaged_past->jabbed</li>
    <li>damaged_past(deflected!=True)->pierced</li>
    <li>damaged_past(deflected!=True)->punctured</li>
    <li>damaged_past(deflected!=True)->skewered</li>
    <li>damaged_present(deflected!=True)->piercing</li>
    <li>damaged_present(deflected!=True)->puncturing</li>
    <li>damaged_present(deflected!=True)->penetrating</li>
    <li>damaged_present(deflected!=True)->skewering</li>
    <li>woundname->hole</li>
    <li>woundname->wound</li>
    <li>woundname->crevice</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</li>
    <li>destroyed_past->impaled</li>
    <li>destroyed_past->perforated</li>
    <li>destroyed_past->skewered</li>
    <li>destroyed_present->impaling</li>
    <li>destroyed_present->perforating</li>
    <li>destroyed_present->skewering</li>
    <li>destroyed_suffix->straight through</li>
    <li>destroyed_suffix->leaving a clean hole</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</li>
    <li>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</li>
  -->
  <Maneuver_Stab.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->нанести колющий удар</li>
    <li>damaged_inf->нанести проникающий удар</li>
    <li>damaged_inf->нанести укол</li>
    <li>maneuver_noun_gen->колющего удара</li>
    <li>maneuver_noun_gen->проникающего удара</li>
    <li>maneuver_noun_instr->колющим ударом</li>
    <li>maneuver_noun_instr->проникающим ударом</li>
    <li>damaged->прокалывает</li>
    <li>damaged->пробивает</li>
    <li>damaged->пронзает</li>
    <li>damaged->протыкает</li>
    <li>damaged_participle->прокалывая</li>
    <li>damaged_participle->пронзая</li>
    <li>damaged_participle->протыкая</li>
    <li>woundname_gen->колотой раны</li>
    <li>woundname_acc->колотую рану</li>
    <li>woundname_acc->дыру</li>
    <li>woundname_acc->щель</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->оставляя кровавую [woundname_acc]</li>
    <li>flavortext_consequence->оставляя глубокую [woundname_acc]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->вызывая кровотечение из [woundname_gen]</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->вызывая утечку рабочих жидкостей из [woundname_gen]</li>
    <li>destroyed->пронзает</li>
    <li>destroyed->дырявит</li>
    <li>destroyed->пробивает</li>
    <li>destroyed_participle->пронзая</li>
    <li>destroyed_participle->дырявя</li>
    <li>destroyed_participle->протыкая</li>
    <li>destroyed_suffix->насквозь</li>
    <li>destroyed_suffix->навылет</li>
  </Maneuver_Stab.rulePack.rulesStrings>
  
</LanguageData>