<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>r_logentry(p=0.5)->[INITIATOR_definite] [damaged_past] [atMaybe] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] with [implement] [deflected_result].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [skillAdvMaybe] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>atMaybe-></li>
    <li>atMaybe->at</li>
    <li>deflected_result->, but the [TOOL_label] [deflected] off [harmlessly_opt]</li>
    <li>deflected_result->, [deflecting] off [RECIPIENT_possessive] armor [harmlessly_opt]</li>
    <li>harmlessly_opt(p=4)-></li>
    <li>harmlessly_opt->[harmlessly]</li>
    <li>harmlessly->harmlessly</li>
    <li>harmlessly->uselessly</li>
    <li>deflected->deflected</li>
    <li>deflected->scraped</li>
    <li>deflected->slid</li>
    <li>deflected->grazed</li>
    <li>deflected->bounced</li>
    <li>deflected->glanced</li>
    <li>deflecting->deflecting</li>
    <li>deflecting->scraping</li>
    <li>deflecting->sliding</li>
    <li>deflecting->grazing</li>
    <li>deflecting->bouncing</li>
    <li>deflecting->glancing</li>
  -->
  <Combat_Deflect.rulePack.rulesStrings>
    <!-- Includes: Combat_MeleeIncludes, Combat_DeflectIncludes, Combat_SkillIncludes -->
    <li>r_logentry(p=1)->[INITIATOR_definite] [deflected_adverb] [damaged] [recipient_part0_label] [RECIPIENT_definite].</li>
    <li>r_logentry(p=1)->[INITIATOR_definite] [damaged] [recipient_part0_label] [RECIPIENT_definite], [deflected_consequence].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite], [skillDescMelee], [deflected_adverb] [damaged] [recipient_part0_label] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdv] [damaged] [recipient_part0_label] [RECIPIENT_definite], [deflected_consequence].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite], [skillDescMelee], но [deflected_adverb] пытается [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [skillAdv] пытается [damaged_inf] [RECIPIENT_definite], [deflected_consequence].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [deflected_adverb] использует [implement], желая [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] использует [implement], желая [damaged_inf] [RECIPIENT_definite], [deflected_consequence].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] [damaged] [RECIPIENT_definite] при помощи [implement], [deflected_consequence].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] [deflected_adverb] [damaged] [RECIPIENT_definite] при помощи [implement].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] [deflected_adverb] [damaged] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.6)->[INITIATOR_definite] [damaged] [RECIPIENT_definite], [deflected_consequence].</li>
    <li>deflected_consequence->лишь [scrap_trans] [RECIPIENT_possessive] броню</li>
    <li>deflected_consequence->оставляя лишь [scratch] на [RECIPIENT_possessive] броне</li>
    <li>deflected_consequence->но [TOOL_label] лишь [scraped] [RECIPIENT_possessive] броню</li>
    <li>deflected_consequence->но [TOOL_label] лишь оставляет [scratch] на [RECIPIENT_possessive] броне</li>
    <li>deflected_consequence->но [TOOL_label] лишь соскальзывает с [RECIPIENT_possessive] брони</li>
  </Combat_Deflect.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf] from [implement].</li>
    <li>r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>result->but [RECIPIENT_definite] leapt out of the way</li>
    <li>result->but was deceived by [RECIPIENT_definite]'s feint</li>
    <li>result->but the attack was cleverly avoided</li>
  -->
  <Combat_Dodge.rulePack.rulesStrings>
    <!-- Includes: Combat_MeleeIncludes, Combat_FailIncludes, Combat_SkillIncludes -->
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] [skillAdvMaybe] от [maneuver_noun_gen] [implement] [INITIATOR_definite].</li>
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] [skillAdvMaybe] уворачивается от [maneuver_noun_gen].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>result->но [RECIPIENT_definite] [skillAdvMaybe] уворачивается</li>
    <li>result->но [RECIPIENT_definite] делает обманное движение</li>
    <li>result->но противник [skillAdvMaybe] уклоняется от удара</li>
  </Combat_Dodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [strikeAdv].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label], [flavortext_consequence].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite], [skillDescMelee], [strikeAdv] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [destroyed_suffix].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] with [implement].</li>
    <li>r_logentry(p=1,recipient_part_count==0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.4,recipient_part_count==0)->[INITIATOR_definite] [skillAdv] [damaged_past] [RECIPIENT_definite] with [implement].</li>
    <li>result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]</li>
    <li>result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>action(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite], [skillDescMelee], hit [RECIPIENT_definite] with a [damaged_inf] from [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] used [implement] [skillAdv] to [damaged_inf] [RECIPIENT_definite]</li>
  -->
  <Combat_Hit.rulePack.rulesStrings>
    <!-- Includes: Combat_MeleeIncludes, Combat_MeleeDamageIncludes, Combat_WoundIncludes, Combat_SkillIncludes -->
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [damaged] [recipient_part0_label] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [strikeAdv] [damaged] [recipient_part0_label] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite][flavortext_situation] [damaged] [recipient_part0_label] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged] [recipient_part0_label] [RECIPIENT_definite], [flavortext_consequence].</li>
    <li>r_logentry(p=0.4)->[INITIATOR_definite], [skillDescMelee], [damaged] [recipient_part0_label] [RECIPIENT_definite].</li>
    <!-- combined high priority, if we destroyed something -->
    <li>r_logentry(recipient_part_destroyed_count!=0,p=0.3)->[INITIATOR_definite] [destroyed] [destroyed_targets] [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count!=0,p=0.3)->[INITIATOR_definite] [destroyed] [destroyed_targets] [RECIPIENT_definite] [destroyed_suffix].</li>
    <li>r_logentry(recipient_part_destroyed_count!=0,p=0.3)->[INITIATOR_definite] [skillAdv] [destroyed] [destroyed_targets] [RECIPIENT_definite].</li>
    <li>r_logentry(recipient_part_destroyed_count!=0,p=0.3)->[INITIATOR_definite] при помощи [implement] [destroyed] [destroyed_targets] [RECIPIENT_definite].</li>
    <li>result(recipient_part_destroyed_count!=0,recipient_part_damaged_count==0,p=1)->[destroyed_participle] [RECIPIENT_possessive] [destroyed_targets]</li>
    <li>result(recipient_part_destroyed_count==0,recipient_part_damaged_count!=0,p=1)->[damaged_participle] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>result(recipient_part_destroyed_count!=0,recipient_part_damaged_count!=0,p=1)->[destroyed_participle] [RECIPIENT_possessive] [destroyed_targets] и [damaged_participle] [RECIPIENT_possessive] [damaged_targets]</li>
    <li>action(p=0.3)->[INITIATOR_definite] бьёт [RECIPIENT_definite] [maneuver_noun_instr] [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] использует [implement], чтобы [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [damaged] [RECIPIENT_definite] при помощи [implement]</li>
    <li>action(p=0.6)->[INITIATOR_definite] [damaged] [RECIPIENT_definite]</li>
  </Combat_Hit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry(p=0.3)->[RECIPIENT_definite] avoided [INITIATOR_definite]'s [WEAPON_label] [damaged_inf].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] missed [RECIPIENT_definite] with a [damaged_inf] from [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite] with [implement].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.3)->[INITIATOR_definite] tried [skillAdvMaybe] to [damaged_inf] [RECIPIENT_definite], but [failtype].</li>
    <li>skillAdvMaybe-></li>
    <li>skillAdvMaybe->[skillAdv]</li>
    <li>failtype(p=5)->missed</li>
    <li>failtype->stumbled</li>
    <li>failtype->tripped</li>
    <li>failtype->flailed</li>
    <li>failtype->floundered</li>
    <li>result(p=4)->but missed</li>
    <li>result->but hit only air</li>
    <li>result->but the swing went wide</li>
    <li>result->but stumbled at the last second</li>
    <li>result(initiator_flesh!=Mechanoid)->but hesitated at the last second</li>
  -->
  <Combat_Miss.rulePack.rulesStrings>
    <!-- Includes: Combat_MeleeIncludes, Combat_FailIncludes, Combat_SkillIncludes -->
    <li>r_logentry(p=0.2)->[RECIPIENT_definite] избегает [maneuver_noun_gen] [WEAPON_label] [INITIATOR_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] промахивается по [RECIPIENT_definite] [maneuver_noun_instr] [implement].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype], пытаясь [damaged_inf] [RECIPIENT_definite] при помощи [implement].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype], пытаясь [damaged_inf] [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype].</li>
    <li>failtype->спотыкается</li>
    <li>failtype->ошибается</li>
    <li>failtype->делает ошибку</li>
    <li>failtype->сбивается</li>
    <li>failtype->промахивается</li>
    <li>result->но промахивается</li>
    <li>result->но лишь рассекает воздух</li>
    <li>result->но удар проходит мимо</li>
    <li>result->но в последний момент сбивается</li>
    <li>result->но пропускает нужный момент</li>
  </Combat_Miss.rulePack.rulesStrings>
  
</LanguageData>